/**
 * @license React
 * scheduler-unstable_mock.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var enableSchedulerDebugging = false;
var enableProfiling = false;

function push(heap, node) {
  var index = heap.length;
  heap.push(node);
  siftUp(heap, node, index);
}
function peek(heap) {
  return heap.length === 0 ? null : heap[0];
}
function pop(heap) {
  if (heap.length === 0) {
    return null;
  }

  var first = heap[0];
  var last = heap.pop();

  if (last !== first) {
    heap[0] = last;
    siftDown(heap, last, 0);
  }

  return first;
}

function siftUp(heap, node, i) {
  var index = i;

  while (index > 0) {
    var parentIndex = index - 1 >>> 1;
    var parent = heap[parentIndex];

    if (compare(parent, node) > 0) {
      // The parent is larger. Swap positions.
      heap[parentIndex] = node;
      heap[index] = parent;
      index = parentIndex;
    } else {
      // The parent is smaller. Exit.
      return;
    }
  }
}

function siftDown(heap, node, i) {
  var index = i;
  var length = heap.length;
  var halfLength = length >>> 1;

  while (index < halfLength) {
    var leftIndex = (index + 1) * 2 - 1;
    var left = heap[leftIndex];
    var rightIndex = leftIndex + 1;
    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

    if (compare(left, node) < 0) {
      if (rightIndex < length && compare(right, left) < 0) {
        heap[index] = right;
        heap[rightIndex] = node;
        index = rightIndex;
      } else {
        heap[index] = left;
        heap[leftIndex] = node;
        index = leftIndex;
      }
    } else if (rightIndex < length && compare(right, node) < 0) {
      heap[index] = right;
      heap[rightIndex] = node;
      index = rightIndex;
    } else {
      // Neither child is smaller. Exit.
      return;
    }
  }
}

function compare(a, b) {
  // Compare sort index first, then task id.
  var diff = a.sortIndex - b.sortIndex;
  return diff !== 0 ? diff : a.id - b.id;
}

// TODO: Use symbols?
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

function markTaskErrored(task, ms) {
}

/* eslint-disable no-var */
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111

var maxSigned31BitInt = 1073741823; // Times out immediately

var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap

var taskQueue = [];
var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
var currentTask = null;
var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.

var isPerformingWork = false;
var isHostCallbackScheduled = false;
var isHostTimeoutScheduled = false;
var currentMockTime = 0;
var scheduledCallback = null;
var scheduledTimeout = null;
var timeoutTime = -1;
var yieldedValues = null;
var expectedNumberOfYields = -1;
var didStop = false;
var isFlushing = false;
var needsPaint = false;
var shouldYieldForPaint = false;
var disableYieldValue = false;

function setDisableYieldValue(newValue) {
  disableYieldValue = newValue;
}

function advanceTimers(currentTime) {
  // Check for tasks that are no longer delayed and add them to the queue.
  var timer = peek(timerQueue);

  while (timer !== null) {
    if (timer.callback === null) {
      // Timer was cancelled.
      pop(timerQueue);
    } else if (timer.startTime <= currentTime) {
      // Timer fired. Transfer to the task queue.
      pop(timerQueue);
      timer.sortIndex = timer.expirationTime;
      push(taskQueue, timer);
    } else {
      // Remaining timers are pending.
      return;
    }

    timer = peek(timerQueue);
  }
}

function handleTimeout(currentTime) {
  isHostTimeoutScheduled = false;
  advanceTimers(currentTime);

  if (!isHostCallbackScheduled) {
    if (peek(taskQueue) !== null) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    } else {
      var firstTimer = peek(timerQueue);

      if (firstTimer !== null) {
        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
      }
    }
  }
}

function flushWork(hasTimeRemaining, initialTime) {


  isHostCallbackScheduled = false;

  if (isHostTimeoutScheduled) {
    // We scheduled a timeout but it's no longer needed. Cancel it.
    isHostTimeoutScheduled = false;
    cancelHostTimeout();
  }

  isPerformingWork = true;
  var previousPriorityLevel = currentPriorityLevel;

  try {
    var currentTime; if (enableProfiling) ; else {
      // No catch in prod code path.
      return workLoop(hasTimeRemaining, initialTime);
    }
  } finally {
    currentTask = null;
    currentPriorityLevel = previousPriorityLevel;
    isPerformingWork = false;
  }
}

function workLoop(hasTimeRemaining, initialTime) {
  var currentTime = initialTime;
  advanceTimers(currentTime);
  currentTask = peek(taskQueue);

  while (currentTask !== null && !(enableSchedulerDebugging )) {
    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
      // This currentTask hasn't expired, and we've reached the deadline.
      break;
    } // $FlowFixMe[incompatible-use] found when upgrading Flow


    var callback = currentTask.callback;

    if (typeof callback === 'function') {
      // $FlowFixMe[incompatible-use] found when upgrading Flow
      currentTask.callback = null; // $FlowFixMe[incompatible-use] found when upgrading Flow

      currentPriorityLevel = currentTask.priorityLevel; // $FlowFixMe[incompatible-use] found when upgrading Flow

      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;

      var continuationCallback = callback(didUserCallbackTimeout);
      currentTime = getCurrentTime();

      if (typeof continuationCallback === 'function') {
        // If a continuation is returned, immediately yield to the main thread
        // regardless of how much time is left in the current time slice.
        // $FlowFixMe[incompatible-use] found when upgrading Flow
        currentTask.callback = continuationCallback;

        advanceTimers(currentTime);

        if (shouldYieldForPaint) {
          needsPaint = true;
          return true;
        }
      } else {

        if (currentTask === peek(taskQueue)) {
          pop(taskQueue);
        }

        advanceTimers(currentTime);
      }
    } else {
      pop(taskQueue);
    }

    currentTask = peek(taskQueue);
  } // Return whether there's additional work


  if (currentTask !== null) {
    return true;
  } else {
    var firstTimer = peek(timerQueue);

    if (firstTimer !== null) {
      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }

    return false;
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;

    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_next(eventHandler) {
  var priorityLevel;

  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;

    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = cur t=n.indexOf(i,1);return t>-1?n.substr(0,t):n}return null},traverseEnterLeave:function(n,t,i,r,f){var e=h(n,t);e!==n&&u(n,e,i,r,!1,!0);e!==t&&u(e,t,i,f,!0,!1)},traverseTwoPhase:function(n,t,i){n&&(u("",n,t,i,!0,!1),u(n,"",t,i,!1,!0))},traverseAncestors:function(n,t,i){u("",n,t,i,!0,!1)},_getFirstCommonAncestorID:h,_getNextDescendantID:s,isAncestorIDOf:e,SEPARATOR:i};t.exports=p},{133:133,81:81}],65:[function(n,t){"use strict";var i={remove:function(n){n._reactInternalInstance=void 0},get:function(n){return n._reactInternalInstance},has:function(n){return void 0!==n._reactInternalInstance},set:function(n,t){n._reactInternalInstance=t}};t.exports=i},{}],66:[function(n,t){"use strict";t.exports={currentlyMountingInstance:null,currentlyUnmountingInstance:null}},{}],67:[function(n,t){"use strict";var r=n(104),i={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(n){var t=r(n);return n.replace(">"," "+i.CHECKSUM_ATTR_NAME+'="'+t+'">')},canReuseMarkup:function(n,t){var u=t.getAttribute(i.CHECKSUM_ATTR_NAME),f;return u=u&&parseInt(u,10),f=r(n),f===u}};t.exports=i},{104:104}],68:[function(n,t){"use strict";function nt(n,t){for(var r=Math.min(n.length,t.length),i=0;r>i;i++)if(n.charAt(i)!==t.charAt(i))return i;return n.length===t.length?-1:r}function s(n){var t=y(n);return t&&i.getID(t)}function tt(n){var t=a(n),i;return t&&(r.hasOwnProperty(t)?(i=r[t],i!==n&&(u(!h(i,t)),r[t]=n)):r[t]=n),t}function a(n){return n&&n.getAttribute&&n.getAttribute(g)||""}function it(n,t){var i=a(n);i!==t&&delete r[i];n.setAttribute(g,t);r[t]=n}function rt(n){return r.hasOwnProperty(n)&&h(r[n],n)||(r[n]=i.findReactNodeByID(n)),r[n]}function ut(n){var t=vt.get(n)._rootNodeID;return at.isNullComponentID(t)?null:(r.hasOwnProperty(t)&&h(r[t],t)||(r[t]=i.findReactNodeByID(t)),r[t])}function h(n,t){if(n){u(a(n)===t);var r=i.findReactContainerForID(t);if(r&&wt(r,n))return!0}return!1}function ft(n){delete r[n]}function et(n){var t=r[n];return t&&h(t,n)?void(l=t):!1}function ot(n){l=null;f.traverseAncestors(n,et);var t=l;return l=null,t}function st(n,t,r,u,f){var e=k.mountComponent(n,t,u,pt);n._isTopLevel=!0;i._mountImageIntoNode(e,r,f)}function ht(n,t,i,r){var u=v.ReactReconcileTransaction.getPooled();u.perform(st,null,n,t,i,u,r);v.ReactReconcileTransaction.release(u)}var ct=n(10),lt=n(30),b=(n(39),n(55)),at=(n(56),n(57)),f=n(64),vt=n(65),c=n(67),yt=n(73),k=n(79),d=n(84),v=n(85),pt=n(113),wt=n(107),y=n(127),bt=n(132),u=n(133),kt=n(144),dt=n(147),gt=(n(150),f.SEPARATOR),g=ct.ID_ATTRIBUTE_NAME,r={},p=1,e=9,o={},w={},ni=[],l=null,i={_instancesByReactRootID:o,scrollMonitor:function(n,t){t()},_updateRootComponent:function(n,t,r,u){return i.scrollMonitor(r,function(){d.enqueueElementInternal(n,t);u&&d.enqueueCallbackInternal(n,u)}),n},_registerComponent:function(n,t){u(t&&(t.nodeType===p||t.nodeType===e));lt.ensureScrollValueMonitoring();var r=i.registerContainer(t);return o[r]=n,r},_renderNewRootComponent:function(n,t,r){var u=bt(n,null),f=i._registerComponent(u,t);return v.batchedUpdates(ht,u,f,t,r),u},render:function(n,t,r){var f,e;if(u(b.isValidElement(n)),f=o[s(t)],f){if(e=f._currentElement,dt(e,n))return i._updateRootComponent(f,n,t,r).getPublicInstance();i.unmountComponentAtNode(t)}var h=y(t),l=h&&i.isRenderedByReact(h),a=l&&!f,c=i._renderNewRootComponent(n,t,a).getPublicInstance();return r&&r.call(c),c},constructAndRenderComponent:function(n,t,r){var u=b.createElement(n,t);return i.render(u,r)},constructAndRenderComponentByID:function(n,t,r){var f=document.getElementById(r);return u(f),i.constructAndRenderComponent(n,t,f)},registerContainer:function(n){var t=s(n);return t&&(t=f.getReactRootIDFromNodeID(t)),t||(t=f.createReactRootID()),w[t]=n,t},unmountComponentAtNode:function(n){u(n&&(n.nodeType===p||n.nodeType===e));var t=s(n),r=o[t];return r?(i.unmountComponentFromNode(r,n),delete o[t],delete w[t],!0):!1},unmountComponentFromNode:function(n,t){for(k.unmountComponent(n),t.nodeType===e&&(t=t.documentElement);t.lastChild;)t.removeChild(t.lastChild)},findReactContainerForID:function(n){var t=f.getReactRootIDFromNodeID(n);return w[t]},findReactNodeByID:function(n){var t=i.findReactContainerForID(n);return i.findComponentRoot(t,n)},isRenderedByReact:function(n){if(1!==n.nodeType)return!1;var t=i.getID(n);return t?t.charAt(0)===gt:!1},getFirstReactDOM:function(n){for(var t=n;t&&t.parentNode!==t;){if(i.isRenderedByReact(t))return t;t=t.parentNode}return null},findComponentRoot:function(n,t){var r=ni,s=0,c=ot(t)||n,h,e,o;for(r[0]=c.firstChild,r.length=1;s<r.length;){for(e=r[s++];e;)o=i.getID(e),o?t===o?h=e:f.isAncestorIDOf(o,t)&&(r.length=s=0,r.push(e.firstChild)):r.push(e.firstChild),e=e.nextSibling;if(h)return r.length=0,h}r.length=0;u(!1)},_mountImageIntoNode:function(n,t,i){var r,s,o,f;if(u(t&&(t.nodeType===p||t.nodeType===e)),i){if(r=y(t),c.canReuseMarkup(n,r))return;s=r.getAttribute(c.CHECKSUM_ATTR_NAME);r.removeAttribute(c.CHECKSUM_ATTR_NAME);o=r.outerHTML;r.setAttribute(c.CHECKSUM_ATTR_NAME,s);f=nt(n,o);" (client) "+n.substring(f-20,f+20)+"\n (server) "+o.substring(f-20,f+20);u(t.nodeType!==e)}u(t.nodeType!==e);kt(t,n)},getReactRootID:s,getID:tt,setID:it,getNode:rt,getNodeFromInstance:ut,purgeID:ft};yt.measureMethods(i,"ReactMount",{_renderNewRootComponent:"_renderNewRootComponent",_mountImageIntoNode:"_mountImageIntoNode"});t.exports=i},{10:10,107:107,113:113,127:127,132:132,133:133,144:144,147:147,150:150,30:30,39:39,55:55,56:56,57:57,64:64,65:65,67:67,73:73,79:79,84:84,85:85}],69:[function(n,t){"use strict";function c(n,t,r){i.push({parentID:n,parentNode:null,type:u.INSERT_MARKUP,markupIndex:o.push(t)-1,textContent:null,fromIndex:null,toIndex:r})}function l(n,t,r){i.push({parentID:n,parentNode:null,type:u.MOVE_EXISTING,markupIndex:null,textContent:null,fromIndex:t,toIndex:r})}function a(n,t){i.push({parentID:n,parentNode:null,type:u.REMOVE_NODE,markupIndex:null,textContent:null,fromIndex:t,toIndex:null})}function v(n,t){i.push({parentID:n,parentNode:null,type:u.TEXT_CONTENT,markupIndex:null,textContent:t,fromIndex:null,toIndex:null})}function s(){i.length&&(y.processChildrenUpdates(i,o),e())}function e(){i.length=0;o.length=0}var y=n(36),u=n(70),h=n(79),f=n(31),r=0,i=[],o=[],p={Mixin:{mountChildren:function(n,t,i){var r=f.instantiateChildren(n,t,i),e,o,u;this._renderedChildren=r;e=[];o=0;for(u in r)if(r.hasOwnProperty(u)){var s=r[u],c=this._rootNodeID+u,l=h.mountComponent(s,c,t,i);s._mountIndex=o;e.push(l);o++}return e},updateTextContent:function(n){var u,t,i;r++;u=!0;try{t=this._renderedChildren;f.unmountChildren(t);for(i in t)t.hasOwnProperty(i)&&this._unmountChildByName(t[i],i);this.setTextContent(n);u=!1}finally{r--;r||(u?e():s())}},updateChildren:function(n,t,i){r++;var u=!0;try{this._updateChildren(n,t,i);u=!1}finally{r--;r||(u?e():s())}},_updateChildren:function(n,t,i){var e=this._renderedChildren,o=f.updateChildren(e,n,t,i),r,s,h,u,c;if(this._renderedChildren=o,o||e){s=0;h=0;for(r in o)o.hasOwnProperty(r)&&(u=e&&e[r],c=o[r],u===c?(this.moveChild(u,h,s),s=Math.max(u._mountIndex,s),u._mountIndex=h):(u&&(s=Math.max(u._mountIndex,s),this._unmountChildByName(u,r)),this._mountChildByNameAtIndex(c,r,h,t,i)),h++);for(r in e)!e.hasOwnProperty(r)||o&&o.hasOwnProperty(r)||this._unmountChildByName(e[r],r)}},unmountChildren:function(){var n=this._renderedChildren;f.unmountChildren(n);this._renderedChildren=null},moveChild:function(n,t,i){n._mountIndex<i&&l(this._rootNodeID,n._mountIndex,t)},createChild:function(n,t){c(this._rootNodeID,t,n._mountIndex)},removeChild:function(n){a(this._rootNodeID,n._mountIndex)},setTextContent:function(n){v(this._rootNodeID,n)},_mountChildByNameAtIndex:function(n,t,i,r,u){var f=this._rootNodeID+t,e=h.mountComponent(n,f,r,u);n._mountIndex=i;this.createChild(n,e)},_unmountChildByName:function(n){this.removeChild(n);n._mountIndex=null}}};t.exports=p},{31:31,36:36,70:70,79:79}],70:[function(n,t){"use strict";var i=n(138),r=i({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,TEXT_CONTENT:null});t.exports=r},{138:138}],71:[function(n,t){"use strict";function e(n){if("function"==typeof n.type)return n.type;var t=n.type,i=r[t];return null==i&&(r[t]=i=f(t)),i}function o(n){return l(i),new i(n.type,n.props)}function s(n){return new u(n)}function h(n){return n instanceof u}var c=n(27),l=n(133),f=null,i=null,r={},u=null,a={injectGenericComponentClass:function(n){i=n},injectTextComponentClass:function(n){u=n},injectComponentClasses:function(n){c(r,n)},injectAutoWrapper:function(n){f=n}},v={getComponentClassForElement:e,createInternalComponent:o,createInstanceForText:s,isTextComponent:h,injection:a};t.exports=v},{133:133,27:27}],72:[function(n,t){"use strict";var r=n(133),i={isValidOwner:function(n){return!(!n||"function"!=typeof n.attachRef||"function"!=typeof n.detachRef)},addComponentAsRefTo:function(n,t,u){r(i.isValidOwner(u));u.attachRef(t,n)},removeComponentAsRefFrom:function(n,t,u){r(i.isValidOwner(u));u.getPublicInstance().refs[t]===n.getPublicInstance()&&u.detachRef(t)}};t.exports=i},{133:133}],73:[function(n,t){"use strict";function r(n,t,i){return i}var i={enableMeasure:!1,storedMeasure:r,measureMethods:function(){},measure:function(n,t,i){return i},injection:{injectMeasure:function(n){i.storedMeasure=n}}};t.exports=i},{}],74:[function(n,t){"use strict";t.exports={}},{}],75:[function(n,t){"use strict";var i=n(138),r=i({prop:null,context:null,childContext:null});t.exports=r},{138:138}],76:[function(n,t){"use strict";function i(n){function t(t,i,u,f,e){if(f=f||s,null==i[u]){var o=r[e];return t?new Error("Required "+o+" `"+u+"` was not specified in "+("`"+f+"`.")):null}return n(i,u,f,e)}var i=t.bind(null,!1);return i.isRequired=t.bind(null,!0),i}function u(n){function t(t,i,u,e){var o=t[i],c=f(o),s,h;return c!==n?(s=r[e],h=k(o),new Erro